new class{constructor(){this.recipesData=JSON.parse(sessionStorage.getItem("recipes"))||[],this.currentFilters={prepTime:null,cookTime:null,searchValue:""},this.recipesContainer=document.querySelector(".recipes__container"),this.recipeSearchValue=document.querySelector(".recipes__search"),this.dropdownTitles=document.querySelectorAll(".recipes__select p"),this.dropdownOptions=document.querySelectorAll(".recipes__select-options div input"),this.prepTimeOptions=document.getElementsByName("prepTime"),this.cookTimeOptions=document.getElementsByName("cookTime"),this.filtersClearBtn=document.querySelectorAll(".recipes__select-btn"),this.dropdownContainer=document.querySelectorAll(".recipes__select"),this.initEvents(),this.renderRecipes()}initEvents(){[...this.dropdownContainer].forEach(e=>{e.addEventListener("click",()=>{const t=e.getAttribute("aria-expanded");e.focus(),e.setAttribute("aria-expanded","false"===t?"true":"false")})}),this.recipeSearchValue.addEventListener("input",this.debounce(e=>this.updateFilters(e),500)),[...this.prepTimeOptions,...this.cookTimeOptions].forEach(e=>{e.addEventListener("click",e=>this.updateFilters(e))}),[...this.filtersClearBtn].forEach(e=>{e.addEventListener("click",e=>this.clearFilters(e))})}debounce(e,t=1e3){let i;return function(...r){clearTimeout(i),i=setTimeout(()=>e(...r),t)}}filterRecipes(){return this.recipesData.filter(e=>{let t=!0;if(this.currentFilters.prepTime&&(t=t&&e.prepMinutes===this.currentFilters.prepTime),this.currentFilters.cookTime&&(t=t&&e.cookMinutes===this.currentFilters.cookTime),this.currentFilters.searchValue){const i=this.currentFilters.searchValue.toLowerCase(),r=e.title.toLowerCase().includes(i),s=e.ingredients.join("").toLowerCase().includes(i);t=t&&(r||s)}return t})}updateFilters(e){const t=e.target.name;this.currentFilters[t]="searchValue"!==t?Number(e.target.value):e.target.value,this.dropdownTitles.forEach(i=>{i.dataset.name===t&&(i.textContent=`${e.target.value} ${Number(e.target.value)<1?"minute":"minutes"}`)});const i=this.filterRecipes();this.renderRecipesWithAnimation(i)}clearFilters(e){const t=e.target.name;t&&(this.currentFilters[t]=null,this.dropdownTitles.forEach(e=>{e.dataset.name===t&&(e.textContent="prepTime"===t?"Max Prep Time":"Max Cook Time")}),this.dropdownOptions.forEach(e=>{e.checked&&e.name===t&&(e.checked=!1)}))}renderRecipesWithAnimation(e){document.startViewTransition()?document.startViewTransition(()=>this.renderRecipes(e)):this.renderRecipes(e)}renderRecipes(e=this.recipesData){const t=e.map((e,t)=>`\n        <article class="recipe">\n          <picture class="recipe__image">\n            <source srcset=${e.image.large} type="image/webp" media="(min-width: 48em)" />\n            <img loading="lazy" src=${e.image.small} alt="${e.title}" />\n          </picture>\n          <div class="recipe__info">\n              <h3 class="recipe__title">${e.title}</h3>\n              <p class="recipe__desc">${e.overview}</p>\n          </div>\n          <div class="recipe__preparation">\n            <div><img src="./img/svgicons/icon-servings.svg" /><p>Servings: ${e.servings}</p></div>\n            <div><img src="./img/svgicons/icon-prep-time.svg" /><p>Prep: ${e.prepMinutes} ${e.prepMinutes>1?"mins":"min"}</p></div>\n            <div><img src="./img/svgicons/icon-cook-time.svg" /><p>Cook: ${e.cookMinutes} ${e.cookMinutes>1?"mins":"min"}</p></div>\n          </div>\n          <a href="./recipe-detail.html?id=${e.slug}" class="recipe__link button">View Recipe</a>\n        </article>`);this.recipesContainer.innerHTML=t.length>0?t.join(""):'<p class="no-result">No recipes found. Try adjusting your filters.</p>'}};